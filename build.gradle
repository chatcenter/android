buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:2.2.3'
		classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
		classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
	}
}

allprojects {
	repositories {
		jcenter()
		maven { url  "http://tokbox.bintray.com/maven" }
	}
}

subprojects {
	tasks.withType(Javadoc).all { enabled = false }
}

apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: "com.jfrog.bintray"

ext {
	bintrayRepo = 'chatcenter'
	bintrayName = 'chatcenter-android-sdk'
	bintrayOrg = 'chatcenter'

	publishedGroupId = 'ly.appsocial'
	libraryName = 'Chatcenter iO Android SDK'
	artifact = 'chatcenter-android-sdk'

	libraryDescription = 'The ChatCenter iO SDK for Android. super-efficient business-customer communication platform'

	siteUrl = 'https://github.com/chatcenter/android'
	gitUrl = 'https://github.com/chatcenter/android.git'

	libraryVersion = '1.0.7'

	developerId = 'appsocially'
	developerName = 'AppSocially Inc.'
	developerEmail = 'yt@chatcenter.io'

	licenseName = 'GNU Lesser General Public License, Version 3.0'
	licenseUrl = 'https://www.gnu.org/licenses/lgpl.txt'
	allLicenses = ["LGPL-3.0"]
}

android {
	compileSdkVersion 25
	buildToolsVersion '25.0.2'

	defaultConfig {
		minSdkVersion 16
		targetSdkVersion 22
		versionCode 1
		versionName libraryVersion

		buildConfigField "String", "SDK_VERSION", "\"$rootProject.ext.libraryVersion\""
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
		}
	}
	packagingOptions {
		exclude 'META-INF/DEPENDENCIES'
		exclude 'META-INF/NOTICE'
		exclude 'META-INF/LICENSE'
		exclude 'libs/commons-math-2.2.jar'
	}
	lintOptions {
		abortOnError false
	}
}

configurations.all {
	resolutionStrategy {
		force 'com.android.support:support-annotations:23.1.1'
		force 'com.squareup.okio:okio:1.9.0'
	}
}

dependencies {
	compile fileTree(include: ['*.jar'], dir: 'libs')
	compile 'com.android.support:appcompat-v7:25.1.0'
	compile 'com.android.support:support-v4:25.1.0'
	compile 'com.android.support:recyclerview-v7:25.1.0'
	compile 'com.google.code.gson:gson:2.4'
	compile 'javax.inject:javax.inject:1'
	compile 'com.squareup.picasso:picasso:2.5.2'
	compile 'com.squareup.okhttp:okhttp:2.7.5'
	compile 'com.squareup.okhttp:okhttp-ws:2.7.5'
	compile 'com.google.android.gms:play-services-gcm:10.0.1'
	compile 'com.google.android.gms:play-services-maps:10.0.1'
	compile 'com.google.android.gms:play-services-places:10.0.1'
	compile 'com.google.android.gms:play-services-location:10.0.1'
	compile 'com.opentok.android:opentok-android-sdk:2.9.1-REL-2636'

	compile 'com.google.dagger:dagger:2.2'
	apt 'com.google.dagger:dagger-compiler:2.2'
	provided 'javax.annotation:jsr250-api:1.0'
}

version = libraryVersion

apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
	user = properties.getProperty("bintray.user")
	key = properties.getProperty("bintray.apikey")

	configurations = ['archives']
	pkg {
		repo = bintrayRepo
		name = bintrayName
		userOrg = bintrayOrg
		desc = libraryDescription
		websiteUrl = siteUrl
		vcsUrl = gitUrl
		licenses = allLicenses
		publish = true
		publicDownloadNumbers = true
		version {
			desc = libraryDescription
			gpg {
				sign = true //Determines whether to GPG sign the files. The default is false
				passphrase = properties.getProperty("bintray.gpg.password")
				//Optional. The passphrase for GPG signing'
			}
		}
	}
}

task androidJavadocs(type: Javadoc) {
	source = android.sourceSets.main.java.srcDirs
	classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
	options {
		links("http://docs.oracle.com/javase/7/docs/api/")
		linksOffline "http://d.android.com/reference","${android.sdkDirectory}/docs/reference"
		encoding = "utf-8"
	};
	exclude '**/BuildConfig.java'
	exclude '**/R.java'
	failOnError = false
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
	classifier = 'javadoc'
	from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
	classifier = 'sources'
	from android.sourceSets.main.java.sourceFiles
}

artifacts {
	archives androidSourcesJar
	archives androidJavadocsJar
}
